# Edge for the Traefik ingress controller
{{- if eq .Values.cluster.edge.kind "ingress" }}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik-role
  labels:
    {{ include "common.labels" . | nindent 4 }}
    app.kubernetes.io/name: traefik-role
rules:
- apiGroups:
  - ""
  resources:
  - services
  - secrets
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - list
  - watch
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses
  - ingressclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - traefik.io
  resources:
  - middlewares
  - middlewaretcps
  - ingressroutes
  - traefikservices
  - ingressroutetcps
  - ingressrouteudps
  - tlsoptions
  - tlsstores
  - serverstransports
  - serverstransporttcps
  verbs:
  - get
  - list
  - watch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik
  labels:
    {{ include "common.labels" . | nindent 4 }}
    app.kubernetes.io/name: traefik
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik-role-binding
  labels:
    {{ include "common.labels" . | nindent 4 }}
    app.kubernetes.io/name: traefik-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-role
subjects:
- kind: ServiceAccount
  name: traefik
  namespace: {{ .Release.Namespace }}
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: traefik-deployment
  labels:
    {{ include "common.labels" . | nindent 4 }}
    app: traefik
    version: {{ .Chart.AppVersion }}
    app.kubernetes.io/name: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik
      containers:
      - name: traefik
        image: {{ .Values.cluster.edge.ingress.repository }}:{{ .Values.cluster.edge.ingress.tag }}
        args:
        - --api.insecure
        - --entryPoints.http.address=:80
        - --entryPoints.https.address=:443
        - --providers.kubernetesingress
        - --providers.kubernetesingress.ingressendpoint.publishedservice={{ .Release.Namespace }}/traefik-web-service
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        - name: dashboard
          containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-web-service
  labels:
    {{ include "common.labels" . | nindent 4 }}
    app.kubernetes.io/name: traefik-web-service
spec:
  type: LoadBalancer
  ports:
  - targetPort: http
    port: 80
    name: http
  - targetPort: https
    port: 443
    name: https
  selector:
    app: traefik
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-dashboard-service
  labels:
    {{ include "common.labels" . | nindent 4 }}
    app.kubernetes.io/name: traefik-dashboard-service
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: dashboard
  selector:
    app: traefik
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: traefik
  labels:
    {{ include "common.labels" . | nindent 4 }}
    app.kubernetes.io/name: traefik
  annotations:
    cert-manager.io/cluster-issuer: ca-issuer
    traefik.ingress.kubernetes.io/router.entrypoints: https
    traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  tls:
  - hosts:
    - {{ .Values.cluster.edge.ingress.fqdn }}
    secretName: traefik-cert
  rules:
  - host: {{ .Values.cluster.edge.ingress.fqdn }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: traefik-dashboard-service
            port:
              number: 8080
{{- end }}