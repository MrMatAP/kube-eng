---
- name: Create a cluster
  hosts: localhost
  tasks:
  - name: Template the cluster configuration
    ansible.builtin.import_role:
      name: mrmat.kube_eng.kind_configuration
    vars:
      control_plane_nodes: "{{ cluster.control_plane_nodes | int }}"
      worker_nodes: "{{ cluster.worker_nodes | int }}"
      config_file: "{{ dist_dir }}/kind-config.yaml"
      airgap_registry_name: "{{ host.registry.name }}"

  - name: Create the cluster
    mrmat.kube_eng.kind_cluster:
      name: "{{ cluster_name }}"
      config_file: "{{ dist_dir }}/kind-config.yaml"
      tool_kind: "{{ host.tools.kind }}"
      state: present

  - name: Install Istio
    when: "cluster.mesh == 'istio'"
    block:
    - mrmat.kube_eng.istio:
        profile: "{{ cluster.istio_profile | default('minimal') }}"
        tool_kubectl: "{{ host.tools.kubectl }}"
        tool_istioctl: "{{ host.tools.istioctl }}"
        state: present
    - name: Install Gateway API
      when: "cluster.gateway_api | bool == true"
      kubernetes.core.k8s:
        src: https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.2.1/standard-install.yaml
        state: present

  - name: Install Istio (Experimental)
    when: "cluster.mesh == 'istio-experimental'"
    block:
    - mrmat.kube_eng.istio:
        profile: "{{ cluster.istio_profile | default('minimal') }}"
        tool_kubectl: "{{ host.tools.kubectl }}"
        tool_istioctl: "{{ host.tools.istioctl }}"
        state: present
    - name: Install Gateway API (Experimental)
      when: "cluster.gateway_api | bool == true"
      kubernetes.core.k8s:
        src: https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.2.1/experimental-install.yaml
        state: present

  - name: Set up PKI
    block:
    - name: Deploy cert-manager
      kubernetes.core.helm:
        name: cert-manager
        create_namespace: true
        release_namespace: "{{ cluster.cert_manager_ns }}"
        chart_ref: jetstack/cert-manager
        wait: true
        values:
          crds:
            enabled: true
            keep: false
          prometheus:
            enabled: true
          config:
            apiVersion: controller.config.cert-manager.io/v1alpha1
            kind: ControllerConfiguration
            enableGatewayAPI: true
    - name: Create a secret from the local CA files
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          type: Opaque
          metadata:
            name: ca-key-pair
            namespace: "{{ cluster.cert_manager_ns }}"
          data:
            tls.crt: "{{ lookup('ansible.builtin.file', '{{ dist_dir }}/pki/ca.pem') | b64encode }}"
            tls.key: "{{ lookup('ansible.builtin.file', '{{ dist_dir }}/pki/ca.key') | b64encode }}"
    - name: Declare the local CA as an issuer
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: cert-manager.io/v1
          kind: ClusterIssuer
          metadata:
            name: ca-issuer
            namespace: "{{ cluster.cert_manager_ns }}"
          spec:
            ca:
              secretName: ca-key-pair

  - name: Install Edge
    ansible.builtin.import_role:
      name: mrmat.kube_eng.edge
    vars:
      kind: "{{ cluster.edge }}"
      ns: "{{ cluster.edge_ns }}"
      cluster_name: "{{ cluster.name }}"
      config_file: "{{ dist_dir }}/edge.yaml"
