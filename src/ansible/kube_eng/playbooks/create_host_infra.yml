# Create and configure all the host infrastructure
---
- name: Create the host infrastructure
  hosts: localhost
  tasks:
  - name: Template the resolver configuration
    ansible.builtin.import_role:
      name: mrmat.kube_eng.bind_configuration
    vars:
      resolver_executable: "{{ host.tools.named }}"
      resolver_dir: "{{ dist_dir }}/resolver"
      forwarder: "{{ host.resolver.forwarder }}"
      domain: "{{ cluster_name }}.k8s"
      resolver_key: "{{ admin_password }}"

  - name: Template the cloud-provider-kind configuration
    ansible.builtin.import_role:
      name: mrmat.kube_eng.cloud_provider_kind_configuration
    vars:
      cloud_provider_kind_url: "{{ host.cloud_provider_kind.url }}"
      cloud_provider_kind_dir: "{{ dist_dir }}/cloud-provider-kind"

  - name: Template the cloud-provider-mdns configuration
    ansible.builtin.import_role:
      name: mrmat.kube_eng.cloud_provider_mdns_configuration
    vars:
      cloud_provider_mdns_executable: "{{ cloud_provider_mdns }}"
      cloud_provider_mdns_dir: "{{ dist_dir }}/cloud-provider-mdns"
      cloud_provider_mdns_user: "{{ user_id }}"

  - name: Create an airgapped registry
    when: host.registry.enabled == true
    block:
    - name: Create an airgapped registry volume
      community.docker.docker_volume:
        name: airgap-registry-volume
        state: present
    - name: Create an airgapped registry
      community.docker.docker_container:
        name: "{{ host.registry.name }}"
        image: "registry:2"
        restart: true
        ports:
        - "127.0.0.1:{{ host.registry.port | int }}:5000"
        mounts:
        - source: airgap-registry-volume
          target: /var/lib/registry
        networks:
        - name: kind
          aliases: "{{ host.registry.name }}"
        state: started
    - name: Preheat the Prometheus image(s)
      ansible.builtin.include_role:
        name: mrmat.kube_eng.preheat_image
      vars:
        airgap_registry: "localhost:{{ host.registry.port }}"
        registry: "{{ item.registry }}"
        repository: "{{ item.repository }}"
        image: "{{ item.image }}"
        tag: "{{ item.tag }}"
      loop: "{{ stack.prometheus.preheat_images }}"
    - name: Preheat the Postgres image(s)
      ansible.builtin.include_role:
        name: mrmat.kube_eng.preheat_image
      vars:
        airgap_registry: "localhost:{{ host.registry.port }}"
        registry: "{{ item.registry }}"
        repository: "{{ item.repository }}"
        image: "{{ item.image }}"
        tag: "{{ item.tag }}"
      loop: "{{ stack.postgres.preheat_images }}"
    - name: Preheat the Keycloak image(s)
      ansible.builtin.include_role:
        name: mrmat.kube_eng.preheat_image
      vars:
        airgap_registry: "localhost:{{ host.registry.port }}"
        registry: "{{ item.registry }}"
        repository: "{{ item.repository }}"
        image: "{{ item.image }}"
        tag: "{{ item.tag }}"
      loop: "{{ stack.keycloak.preheat_images }}"
    - name: Preheat the Grafana image(s)
      ansible.builtin.include_role:
        name: mrmat.kube_eng.preheat_image
      vars:
        airgap_registry: "localhost:{{ host.registry.port }}"
        registry: "{{ item.registry }}"
        repository: "{{ item.repository }}"
        image: "{{ item.image }}"
        tag: "{{ item.tag }}"
      loop: "{{ stack.grafana.preheat_images }}"
    - name: Preheat the Jaeger image(s)
      ansible.builtin.include_role:
        name: mrmat.kube_eng.preheat_image
      vars:
        airgap_registry: "localhost:{{ host.registry.port }}"
        registry: "{{ item.registry }}"
        repository: "{{ item.repository }}"
        image: "{{ item.image }}"
        tag: "{{ item.tag }}"
      loop: "{{ stack.jaeger.preheat_images }}"
    - name: Preheat the Kiali image(s)
      ansible.builtin.include_role:
        name: mrmat.kube_eng.preheat_image
      vars:
        airgap_registry: "localhost:{{ host.registry.port }}"
        registry: "{{ item.registry }}"
        repository: "{{ item.repository }}"
        image: "{{ item.image }}"
        tag: "{{ item.tag }}"
      loop: "{{ stack.kiali.preheat_images }}"
